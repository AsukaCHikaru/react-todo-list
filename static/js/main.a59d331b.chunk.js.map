{"version":3,"sources":["components/Header.js","components/ListName.js","components/TaskNameInput.js","components/TaskTagInput.js","logic/handleSpace.js","logic/calcTag.js","components/Task.js","components/MajorBtn.js","logic/calcTaskHash.js","components/AddTaskForm.js","components/SearchSumm.js","components/SearchForm.js","components/List.js","logic/handleTask.js","logic/getUserData.js","logic/updateUserData.js","components/App.js","logic/checkBreakpoints.js","serviceWorker.js","index.js"],"names":["Header","_this","this","props","width","react_default","a","createElement","className","selectedList","onClick","updateSelectedList","renderRwdBtns","Component","ListName","name","defaultProps","TaskNameInput","type","placeholder","value","onChange","updateNameInput","onKeyDown","e","keyCode","submit","TaskTagInput","updateTagInput","handleSpace","str","RegExp","exec","replace","calcTag","tagStr","tagArr","split","filter","tag","map","result","length","forEach","hasOwnProperty","push","Task","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","nameInput","target","tagInput","submitEdit","state","showEdit","showDetail","editTask","objectSpread","task","join","_this2","TaskNameInput_TaskNameInput","defName","status","prevState","_this3","index_es","icon","TaskTagInput_TaskTagInput","defTag","style","display","_this4","_this5","finishTask","renderName","renderEditBtn","delTask","time","renderTag","renderSubmitEdit","MajorBtn","concat","func","calcTaskHash","t","Date","rng","Math","ceil","random","toString","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","AddTaskForm","clickAddBtn","newTask","id","toLocaleString","addTask","handleAddTaskFormDisplay","showWarning","show","SearchSumm","numOfResults","keyword","SearchForm","updateSearchInput","searchInput","searchTask","startSearch","List","param","showAddTaskForm","SearchSumm_SearchSumm","tasks","i","Task_Task","key","handleTask","AddTaskForm_AddTaskForm","SearchForm_SearchForm","Done","Todo","MajorBtn_MajorBtn","Search","clearSearch","toLowerCase","ListName_ListName","renderSearchSumm","renderTasks","renderAddTaskForm","renderSearchForm","renderMajorBtn","deepClone","obj","JSON","parse","stringify","add","taskToAdd","currLists","list","edit","taskToEdit","del","taskToDel","splice","finish","taskToFin","lists","done","search","match","includes","ele","getUserData","localStorage","getItem","userId","updateUserData","setItem","library","faTrashAlt","faCheck","faPencilAlt","faPlusCircle","faMinusCircle","faSearch","App","updateAppWidth","newWidth","currBreakpts","newBreakpts","checkBreakpoints","window","innerWidth","newList","isFirstRender","addEventListener","removeEventListener","node","List_List","undefined","Header_Header","renderLists","Boolean","location","hostname","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a59d331b.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nimport '../style/Header.css';\n\nexport default class Header extends Component {\n  renderRwdBtns(){\n    return (this.props.width <= 768) ?\n      <div className=\"rwdBtn\">\n        <button\n          className={(this.props.selectedList===0) ? 'pressed' : ''}\n          onClick={() => this.props.updateSelectedList(0)}\n        >Done</button>\n        <button\n          className={(this.props.selectedList===1) ? 'pressed' : ''}\n          onClick={() => this.props.updateSelectedList(1)}\n        >Todo</button>\n        <button\n          className={(this.props.selectedList===2) ? 'pressed' : ''}\n          onClick={() => this.props.updateSelectedList(2)}\n        >Search</button>\n      </div> :\n      null; \n  }\n  render() {\n    return (\n      <header>\n        Todo list\n        {this.renderRwdBtns()}\n      </header>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport '../style/ListName.css';\n\nexport default class ListName extends Component{\n  render(){\n    return (\n      <div className=\"listName\">\n        <h3>{this.props.name}</h3>\n      </div>\n    );\n  }\n}\n\nListName.defaultProps = {\n  name: \"task name\",\n};\n\nListName.propTypes = {\n  name: PropTypes.string,\n};","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\nimport '../style/TaskNameInput.css';\n\nexport default class TaskNameInput extends Component {\n  render() {\n    return (\n      <input \n        type=\"text\" \n        placeholder=\"Task name\"\n        className=\"taskNameInput\"\n        value={this.props.value}\n        onChange={this.props.updateNameInput}\n        onKeyDown={(e) => {\n          if(e.keyCode===13) this.props.submit();\n        }}\n      />\n    )\n  }\n}\n\nTaskNameInput.propTypes = {\n  value: PropTypes.string,\n  updateNameInput: PropTypes.func,\n  submit: PropTypes.func,\n};","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\nimport '../style/TaskTagInput.css';\n\nexport default class TaskTagInput extends Component {\n  render() {\n    return (\n      <input \n        className=\"taskTagInput\"\n        placeholder='Add tags (use \",\" to separate)'\n        value={this.props.value}\n        onChange={this.props.updateTagInput}\n        onKeyDown={(e) => {\n          if(e.keyCode===13) this.props.submit();\n        }}\n      />\n    )\n  }\n}\n\nTaskTagInput.propTypes = {\n  value: PropTypes.string,\n  updateTagInput: PropTypes.func,\n  submit: PropTypes.func,\n};","// This function removes spaces before str, but remains spaces in it\n// ex: \"  test\" => \"test\", \n//     \"  test test\" => \"test test\"\n\nexport default function handleSpace(str) {\n  if(RegExp(/./).exec(str)[0]===' ') return str.replace(/\\s+(.+)/, '$1');\n  else return str;\n}\n\n","// this function turns string into tag array splited by \",\"\n// ex: \"tag1, tag2, tag3\" => [\"tag1\", \"tag2\", \"tag3\"]\n\nimport handleSpace from './handleSpace';\n\nexport default function calcTag(tagStr) {\n  let tagArr = tagStr.split(/,\\s*/).filter(tag => tag!=='');\n  let map = {};\n  let result = [];\n\n  // delete spaces before first tag if there are\n  if(tagArr.length!==0) \n    tagArr[0] = handleSpace(tagArr[0]);\n  // filter same tag\n  tagArr.forEach((tag) => {\n    if(!map.hasOwnProperty(tag)){\n      map[tag] = true;\n      result.push(tag);\n    }\n  });  \n  return result;\n}","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\nimport '../style/Task.css';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport TaskNameInput from './TaskNameInput';\nimport TaskTagInput from './TaskTagInput';\nimport calcTag from '../logic/calcTag';\nimport handleSpace from '../logic/handleSpace';\n\nexport default class Task extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      showEdit: false,\n      showDetail: false,\n      nameInput: this.props.task.name,\n      tagInput: this.props.task.tag.join(\", \"),\n    };\n  }\n  updateNameInput = (e) => {\n    this.setState({nameInput: e.target.value});\n  }\n  updateTagInput = (e) => {\n    this.setState({tagInput: e.target.value});\n  }\n  renderName(){\n    return this.state.showEdit ?\n      <TaskNameInput \n        value={this.state.nameInput}\n        updateNameInput={this.updateNameInput} \n        defName={this.props.task.name}\n        submit={this.submitEdit}\n      /> :\n      <h5\n        className={this.props.task.status==='done' ? 'name done' : 'name'}\n        onClick={() => this.setState((prevState) => ({\n          showDetail: !prevState.showDetail\n        }))}\n      >{this.props.task.name}</h5>\n    ;\n  }\n  renderEditBtn(){\n    return this.props.task.status==='done' ? \n      <span></span> : \n      <FontAwesomeIcon \n        icon=\"pencil-alt\" \n        className=\"editBtn\" \n        onClick={() => this.setState((prevState) => ({\n          showEdit: !prevState.showEdit\n        }))}\n      />\n    ;\n  }\n  renderTag(){\n    return this.state.showEdit ?\n      <h6>Tags: \n        <TaskTagInput           \n          className=\"tag\"\n          updateTagInput={this.updateTagInput}\n          value={this.state.tagInput}\n          defTag={this.props.task.tag.join(\", \")}\n          submit={this.submitEdit}\n        />\n      </h6> :\n      <h6 \n        className=\"tag\"\n        style={{display: (this.props.task.tag.length!==0) ? 'block' : 'none'}}\n      >Tags: {this.props.task.tag.join(\", \")}</h6>\n    ;\n  }\n  renderSubmitEdit(){\n    return this.state.showEdit ? \n      <div className=\"submitEdit\">\n        <button\n          onClick={() => this.submitEdit()}\n        >OK</button>\n        <button\n          onClick={() => {\n            this.setState({\n              showEdit: false,\n              nameInput: this.props.task.name,\n              tagInput: this.props.task.tag.join(\", \"),\n            })\n          }}\n        >CANCEL</button>\n      </div> : \n      null\n    ;\n  }\n  submitEdit = () => {\n    if(RegExp(/\\w+/).exec(this.state.nameInput)!==null){\n      this.setState({\n        showEdit: false,\n        showDetail: true,\n        nameInput: handleSpace(this.state.nameInput),\n      }, \n        this.props.editTask({\n          ...this.props.task, \n          name: handleSpace(this.state.nameInput),\n          tag: calcTag(this.state.tagInput)})\n      )\n    }\n  }\n  render() {\n    return (\n      <div className=\"task\" >\n        <FontAwesomeIcon \n          icon=\"check\" \n          className={this.props.task.status==='done' ? 'checkBtn done' : 'checkBtn'}\n          onClick={() => {\n            if(this.props.task.status==='todo') this.props.finishTask({...this.props.task, status: 'done'})\n          }}\n        />\n        {this.renderName()}\n        {this.renderEditBtn()}\n        <FontAwesomeIcon \n          icon=\"trash-alt\" \n          className=\"delBtn\" \n          onClick={() => {\n            this.props.delTask(this.props.task)            \n          }}\n        />\n        <div \n          className=\"details\"\n          style={{display: (this.state.showEdit || this.state.showDetail) ? 'grid' : 'none'}}\n        >\n          <h6 className=\"time\">Time: {this.props.task.time}</h6>\n          {this.renderTag()}      \n        </div>\n        {this.renderSubmitEdit()}\n      </div>\n    )\n  }\n}\n\nTask.defaultProps = {\n  task: {name: \"task name\", tag: []},\n};\n\nTask.propTypes = {\n  task: PropTypes.object.isRequired,\n  editTask: PropTypes.func,\n  delTask: PropTypes.func,\n  finishTask: PropTypes.func,\n};","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport '../style/MajorBtn.css';\n\nexport default class MajorBtn extends Component{\n  render(){\n    return (\n      <div >\n        <FontAwesomeIcon \n          className={`majorBtn ${this.props.type}`}\n          icon={(this.props.type==='todo') ? 'plus-circle' : 'minus-circle'}\n          onClick={() => this.props.func()}\n        />\n      </div>\n    );\n  }\n}","export default function calcTaskHash(){\n  let t = new Date();\n  let rng = Math.ceil(Math.random()*1000).toString();\n  let hash = \n    t.getFullYear().toString()+\n    t.getMonth().toString()+\n    t.getDate().toString()+\n    t.getHours().toString()+\n    t.getMinutes().toString()+\n    t.getSeconds().toString()+\n    rng;\n  return hash;         \n}","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\nimport '../style/AddTaskForm.css';\n\nimport TaskNameInput from './TaskNameInput';\nimport TaskTagInput from './TaskTagInput';\nimport calcTaskHash from '../logic/calcTaskHash';\nimport calcTag from '../logic/calcTag';\nimport handleSpace from '../logic/handleSpace';\n\nexport default class AddTaskForm extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      nameInput: '',\n      tagInput: '',\n      showWarning: false,\n    }\n  }\n  clickAddBtn = () => {\n    if(RegExp(/\\w+/).exec(this.state.nameInput)!==null){\n      let newTask = {\n        id: calcTaskHash(),\n        name: handleSpace(this.state.nameInput),\n        status: 'todo',\n        time: new Date().toLocaleString(),\n        tag: calcTag(this.state.tagInput),      \n      }\n      this.props.addTask(newTask);\n      this.props.handleAddTaskFormDisplay('hide');\n      this.setState({nameInput: '', tagInput: '', showWarning: false});\n    }else{\n      this.setState({showWarning: true})\n    }\n  }\n  updateNameInput = (e) => {\n    this.setState({nameInput: e.target.value});\n  }\n  updateTagInput = (e) => {\n    this.setState({tagInput: e.target.value});\n  }\n  render() {\n    return (\n      <div \n        className=\"addTaskForm\"\n        style={{display: (this.props.show) ? 'flex' : 'none'}}\n      >\n        <h2>Add task</h2>\n        <TaskNameInput \n          value={this.state.nameInput}\n          updateNameInput={this.updateNameInput}\n          submit={this.clickAddBtn}\n        />\n        <TaskTagInput \n          value={this.state.tagInput}\n          updateTagInput={this.updateTagInput} \n          submit={this.clickAddBtn}\n        />\n        <p \n          className=\"warning\"\n          style={{display: (this.state.showWarning) ? 'inline' : 'none'}}\n        >Task name is needed!</p>\n        <div>\n          <button\n            onClick={this.clickAddBtn}\n          >ADD</button>\n          <button\n            onClick={() => {\n              this.setState(\n                {showWarning: false},\n                this.props.handleAddTaskFormDisplay('hide')\n              )}}\n          >CANCEL</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nAddTaskForm.defaultProps = {\n  show: false,\n};\n\nAddTaskForm.propTypes = {\n  show: PropTypes.bool,\n  handleAddTaskFormDisplay: PropTypes.func,\n  addTask: PropTypes.func,\n};","import React, { Component } from 'react'\n\nimport '../style/SearchSumm.css';\n\nexport default class SearchSumm extends Component {\n  render() {\n    let str = '';\n    switch (this.props.numOfResults) {\n      case 0:\n        str = `No result for \"${this.props.keyword}\"`\n        break;\n      case 1: \n        str = `1 result for \"${this.props.keyword}\"`\n        break;   \n      default:\n        str = `${this.props.numOfResults} results for \"${this.props.keyword}\"`\n        break;\n    }\n    return (\n      <h3 className=\"searchSumm\" >\n        {str}\n      </h3>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport handleSpace from '../logic/handleSpace';\n\nimport '../style/SearchForm.css';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport default class SearchForm extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      searchInput: '',\n    };\n  }\n  updateSearchInput = (e) => {\n    this.setState({searchInput: e.target.value});\n  }\n  startSearch(){\n    if(RegExp(/\\w+/).exec(this.state.searchInput)!==null){\n      this.setState({searchInput: ''}, \n      this.props.searchTask(handleSpace(this.state.searchInput))\n      );\n    }\n  }\n  render() {\n    return (\n      <div className=\"searchForm\">\n        <input \n          type=\"text\" \n          placeholder=\"Enter name or tag\"\n          onChange={this.updateSearchInput}\n          value={this.state.searchInput}\n          onKeyDown={(e) => {\n            if(e.keyCode===13) this.startSearch();\n          }}\n        />\n        <FontAwesomeIcon \n          icon=\"search\"\n          onClick={() => this.startSearch()}\n        />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport '../style/List.css';\n\nimport ListName from './ListName';\nimport Task from './Task';\nimport MajorBtn from './MajorBtn';\nimport AddTaskForm from './AddTaskForm';\nimport SearchSumm from './SearchSumm';\nimport SearchForm from './SearchForm';\n\nexport default class List extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      showAddTaskForm: false,      \n    };\n  }\n  handleAddTaskFormDisplay = (param) => {\n    this.setState({showAddTaskForm: (param==='show' ? true : false)})\n  }  \n  renderSearchSumm(){\n    return (this.props.keyword) ? \n      <SearchSumm\n        keyword={this.props.keyword}\n        numOfResults={this.props.tasks.length}\n      /> :\n      null\n    ;\n  }\n  renderTasks(){\n    return (\n      <div className=\"tasks\">\n        {this.props.tasks.map((task, i) => {\n            return (\n              <Task              \n                key={i}\n                task={task}\n                editTask={this.props.handleTask.editTask}\n                delTask={this.props.handleTask.delTask}                \n                finishTask={this.props.handleTask.finishTask}\n              />\n            )\n        })}\n      </div>\n    )\n  }\n  renderAddTaskForm(){\n    return (this.props.name==='Todo') ? \n      <AddTaskForm \n        show={this.state.showAddTaskForm}\n        handleAddTaskFormDisplay={this.handleAddTaskFormDisplay}          \n        addTask={this.props.handleTask.addTask}\n      /> :\n      null\n    ;        \n  }\n  renderSearchForm(){\n    return (this.props.name==='Search') ?\n      <SearchForm \n        searchTask={this.props.handleTask.searchTask}\n      /> :\n      null\n    ;      \n  }\n  renderMajorBtn(){\n    const majorBtn = {\n      Done: null,\n      Todo: <MajorBtn   \n        type='todo'\n        func={() => this.handleAddTaskFormDisplay('show')}\n      />,\n      Search: <MajorBtn \n        type='search'\n        func={this.props.handleTask.clearSearch}\n      />\n    }\n    return majorBtn[this.props.name];\n  }\n  render(){\n    return (\n      <div className={`list ${this.props.name.toLowerCase()}`}>\n        <ListName name={this.props.name} />\n        {this.renderSearchSumm()}\n        {this.renderTasks()}\n        {this.renderAddTaskForm()}\n        {this.renderSearchForm()}\n        {this.renderMajorBtn()}\n      </div>\n    );\n  }\n}\n\nList.defaultProps = {\n  name: \"list\",\n  tasks: [],\n  handleTask: {},\n};\n\nList.propTypes = {\n  name: PropTypes.string.isRequired,\n  tasks: PropTypes.array,\n  handleTask: PropTypes.object,\n};","function deepClone(obj) {\n  return JSON.parse(JSON.stringify(obj));\n}\n\nconst handleTask = {\n  add(state, taskToAdd){\n    let currLists = deepClone(state.list);\n    currLists[1].tasks.push(taskToAdd);\n    return currLists;\n  },\n  edit(state, taskToEdit){\n    let currLists = deepClone(state.list);\n    // Iterate tasks in lists and edit task with same id to param version\n    currLists.forEach((list) => {      \n      list.tasks.forEach((task, i) => {\n        if(task.id === taskToEdit.id) list.tasks[i] = taskToEdit;\n      });\n    });\n    return currLists;\n  },\n  del(state, taskToDel){\n    let currLists = deepClone(state.list);\n    // Iterate tasks in lists and delete task with same id\n    currLists.forEach((list) => {      \n      list.tasks.forEach((task, i) => {\n        if(task.id === taskToDel.id) list.tasks.splice(i, 1);        \n      });\n    });\n    return currLists;\n  },\n  finish(state, taskToFin){\n    let currLists = deepClone(state.list);\n    let lists = [currLists[1], currLists[2]];\n    let done = currLists[0];\n    // Iterate tasks in Todo and Search list and delete task with same id    \n    lists.forEach((list) => {      \n      list.tasks.forEach((task, i) => {\n        if(task.id === taskToFin.id) list.tasks.splice(i, 1);        \n      });\n    })\n    // Add it to Done list\n    done.tasks.push(taskToFin);\n    return currLists;\n  },\n  search(state, keyword){\n    let currLists = deepClone(state.list);\n    let lists = [currLists[0], currLists[1]];\n    let result = [];\n    // Iterate tasks in Done and Todo list \n    lists.forEach((list) => {      \n      list.tasks.forEach((task) => {\n        // If name matches, return it\n        let match = task.name.includes(keyword);\n        // If name dosent match, iterate tags \n        if(!match && task.tag.length!==0){\n          task.tag.forEach((ele) => {\n            if(ele.includes(keyword)) match = true;\n          })\n        }\n        if(match) result.push(task);        \n      });\n    });\n    currLists[2].tasks = result;\n    currLists[2].keyword = keyword;\n    return currLists;\n  },\n  clearSearch(state){\n    let currLists = deepClone(state.list);\n    currLists[2].tasks = [];\n    currLists[2].keyword = null;\n    return currLists;\n  }\n};\n\nexport default handleTask;","// Placeholder for backend GET APIs\n\nimport handleTask from './handleTask';\n\nfunction getUserData() {\n  const logined = localStorage.getItem('state')!==null;\n  if(logined) {\n    // Load existing data into app\n    let state = JSON.parse(localStorage.getItem('state'));\n    // Not showing Search result when reloading app\n    state.list = handleTask.clearSearch(state);\n    state.selectedList = 1;\n    return state;\n  }\n  else{\n    // Generate a user id for current user\n    const userId = 'localTempId';\n    return {userId: userId};\n  }\n}\n\nexport default getUserData;","// Placeholder for backend POST APIs\n\nfunction updateUserData(state) {\n  localStorage.setItem('state', JSON.stringify(state));  \n}\n\nexport default updateUserData;","import React, { Component } from 'react';\n\nimport Header from './Header';\nimport List from './List';\n\nimport getUserData from '../logic/getUserData';\nimport updateUserData from '../logic/updateUserData';\nimport checkBreakpoints from '../logic/checkBreakpoints';\n\nimport '../style/App.css';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faCheck, faTrashAlt, faPencilAlt, faPlusCircle, faMinusCircle, faSearch } from '@fortawesome/free-solid-svg-icons';\nimport handleTask from '../logic/handleTask';\nlibrary.add(faTrashAlt, faCheck, faPencilAlt, faPlusCircle, faMinusCircle, faSearch);\n\nexport default class App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {      \n      userId: null,\n      list: [\n        {id: 0, name: 'Done', tasks: [], },\n        {id: 1, name: 'Todo', tasks: [], },\n        {id: 2, name: 'Search', tasks: [], keyword: null, },\n      ],     \n      width: window.innerWidth,\n      selectedList: 1,\n    };    \n    this.isFirstRender = this.state.userId===null;\n    this.handleTask = {\n      addTask: (taskToAdd) => this.setState({list: handleTask.add(this.state, taskToAdd)}),\n      editTask: (taskToEdit) => this.setState({list: handleTask.edit(this.state, taskToEdit)}),\n      delTask: (taskToDel) => this.setState({list: handleTask.del(this.state, taskToDel)}),\n      finishTask: (taskToFin) => this.setState({list: handleTask.finish(this.state, taskToFin)}),\n      searchTask: (keyword) => this.setState({list: handleTask.search(this.state, keyword)}),\n      clearSearch: () => this.setState({list: handleTask.clearSearch(this.state)}),\n    };\n  }    \n  componentWillMount(){\n    if(this.isFirstRender) this.setState(getUserData(), () => updateUserData(this.state));\n  } \n  componentDidUpdate(){        \n    updateUserData(this.state);\n  }\n  componentDidMount(){\n    window.addEventListener('resize', this.updateAppWidth);\n  }\n  componentWillUnmount(){\n    window.removeEventListener('resize', this.updateAppWidth);\n  }\n  updateAppWidth = () => {\n    if(checkBreakpoints(this.state, window.innerWidth)) this.setState({width: window.innerWidth})\n  }\n  updateSelectedList = (newList) => {\n    this.setState({selectedList: newList});\n  }\n  renderLists(){\n    let node;\n    if(this.state.width > 768){\n      node = \n        this.state.list.map((list) => {\n          return (\n            <List\n              key={list.id}\n              name={list.name}\n              keyword={(list.keyword===null || list.keyword===undefined) ? null : list.keyword}\n              tasks={list.tasks}\n              handleTask={this.handleTask}\n            >    \n            </List>\n          )\n        })\n      ;  \n    }else{\n      const list = this.state.list[this.state.selectedList];\n      node = <List\n        key={this.state.selectedList}\n        name={list.name}\n        keyword={(this.state.list.keyword===null || list.keyword===undefined) ? null : list.keyword}\n        tasks={list.tasks}\n        handleTask={this.handleTask}\n      >    \n      </List>\n    }\n    return (\n      <div className=\"listWraper\" >\n      {node}\n      </div>\n    );\n  }\n  render(){\n    return (\n      <div className=\"app\">\n        <Header \n          width={this.state.width} \n          selectedList={this.state.selectedList}\n          updateSelectedList={this.updateSelectedList}\n        />\n        {this.renderLists()}\n      </div>\n    );\n  }\n}","export default function checkBreakpoints(state, newWidth) {\n  const breakptsRef = [0, 420, 768, 1200, 9999];\n  let currBreakpts = null;\n  let newBreakpts = null;\n  breakptsRef.forEach((ele, i) => {\n    if(ele > state.width && currBreakpts===null) currBreakpts = i;\n    if(ele > newWidth && newBreakpts===null) newBreakpts = i;\n  });\n  return currBreakpts!==newBreakpts;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}